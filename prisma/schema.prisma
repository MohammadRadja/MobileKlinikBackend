datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model user {
  id_user       String         @id @default(uuid()) @db.Char(36)
  username      String         @unique
  password      String
  jabatan       String
  alamat        String
  no_telp       String         @db.VarChar(15)
  email         String         @unique
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  rekam_medis   rekamMedis[]
  hewan         hewan[]
  appointments  appointment[]
  pembayaran    pembayaran[]
  resep         resep[]
}

model dokter {
  id_dokter      String         @id @default(uuid()) @db.Char(36)
  nama_dokter    String
  spesialisasi   String
  appointments   appointment[]
  pembayaran     pembayaran[]
}

model hewan {
  id_hewan      String         @id @default(uuid()) @db.Char(36)
  id_user       String
  nama_hewan    String
  jenis_hewan   String
  umur          Int
  berat         Float
  jenis_kelamin String
  rekam_medis   rekamMedis[]
  appointments  appointment[]
  pembayaran    pembayaran[]
  user          user?          @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
}

model obat {
  id_obat       String         @id @default(uuid()) @db.Char(36)
  nama_obat     String
  keterangan    String
  rekam_medis   rekamMedis[]
  resep         resep[]
  pembayaran    pembayaran[]
}

model rekamMedis {
  id_rekam_medis String         @id @default(uuid()) @db.Char(36)
  id_hewan       String
  id_user        String
  id_obat        String
  keluhan        String
  diagnosa       String
  tgl_periksa    DateTime
  pembayaran     pembayaran[]
  resep          resep[]
  hewan          hewan?        @relation(fields: [id_hewan], references: [id_hewan], onDelete: Cascade, onUpdate: Cascade)
  user           user?         @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
  obat           obat?         @relation(fields: [id_obat], references: [id_obat], onDelete: Cascade, onUpdate: Cascade)
}

model pembayaran {
  id_pembayaran   String         @id @default(uuid()) @db.Char(36)
  id_rekam_medis  String        
  id_user         String
  id_hewan        String        
  id_dokter       String        
  id_appointment  String         
  id_obat         String        
  id_resep        String        
  tgl_pembayaran  DateTime
  jumlah_pembayaran Float
  rekam_medis     rekamMedis?   @relation(fields: [id_rekam_medis], references: [id_rekam_medis], onDelete: Cascade, onUpdate: Cascade)
  user            user?         @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
  hewan           hewan?        @relation(fields: [id_hewan], references: [id_hewan], onDelete: Cascade, onUpdate: Cascade)
  dokter          dokter?       @relation(fields: [id_dokter], references: [id_dokter], onDelete: Cascade, onUpdate: Cascade)
  appointment     appointment?  @relation(fields: [id_appointment], references: [id_appointment], onDelete: Cascade, onUpdate: Cascade)
  obat            obat?         @relation(fields: [id_obat], references: [id_obat], onDelete: Cascade, onUpdate: Cascade)
  resep           resep?        @relation(fields: [id_resep], references: [id_resep], onDelete: Cascade, onUpdate: Cascade)
}

model resep {
  id_resep       String         @id @default(uuid()) @db.Char(36)
  id_user        String
  id_rekam_medis String
  id_obat        String
  jumlah_obat    Int
  pembayaran     pembayaran[]
  user           user?         @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
  rekam_medis    rekamMedis?   @relation(fields: [id_rekam_medis], references: [id_rekam_medis], onDelete: Cascade, onUpdate: Cascade)
  obat           obat?         @relation(fields: [id_obat], references: [id_obat], onDelete: Cascade, onUpdate: Cascade)
}

model appointment {
  id_appointment String         @id @default(uuid()) @db.Char(36)
  id_user        String
  id_hewan       String
  id_dokter      String
  tgl_appointment DateTime
  catatan        String?
  pembayaran     pembayaran[]
  hewan          hewan?        @relation(fields: [id_hewan], references: [id_hewan], onDelete: Cascade, onUpdate: Cascade)
  dokter         dokter?       @relation(fields: [id_dokter], references: [id_dokter], onDelete: Cascade, onUpdate: Cascade)
  user           user?         @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
}
