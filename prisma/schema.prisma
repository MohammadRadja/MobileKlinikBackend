datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id_admin   Int      @id @default(autoincrement())
  username   String   @unique
  password   String
  nama       String
  jabatan    String
  createdAt  DateTime @default(now())
}

model Pegawai {
  id_pegawai  Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  jabatan     String
  alamat      String
  no_telp     String
  rekam_medis RekamMedis[]
}

model Pemilik {
  id_pemilik  Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  jabatan     String
  alamat      String
  no_telp     String
  hewan         Hewan[]
  rekam_medis   RekamMedis[]
  appointments  Appointment[]
  pembayaran    Pembayaran[]
}

model Hewan {
  id_hewan      Int      @id @default(autoincrement())
  id_pemilik    Int
  nama_hewan    String
  jenis_hewan   String
  umur          Int
  berat         Float
  jenis_kelamin String
  rekam_medis   RekamMedis[]
  appointments  Appointment[] 
  pembayaran    Pembayaran[]
  pemilik       Pemilik?  @relation(fields: [id_pemilik], references: [id_pemilik], onDelete: Cascade, onUpdate: Cascade)
}

model Obat {
  id_obat      Int      @id @default(autoincrement())
  nama_obat    String
  keterangan   String
  rekam_medis RekamMedis[]
  resep        Resep[]
  pembayaran     Pembayaran[]
}

model RekamMedis {
  id_rekam_medis Int       @id @default(autoincrement())
  id_hewan       Int
  id_pemilik     Int
  id_pegawai     Int
  id_obat        Int
  keluhan        String
  diagnosa       String
  tgl_periksa    DateTime
  pembayaran     Pembayaran[]
  resep          Resep[]
  hewan          Hewan?     @relation(fields: [id_hewan], references: [id_hewan], onDelete: Cascade, onUpdate: Cascade)
  pemilik        Pemilik?   @relation(fields: [id_pemilik], references: [id_pemilik], onDelete: Cascade, onUpdate: Cascade)
  pegawai        Pegawai?   @relation(fields: [id_pegawai], references: [id_pegawai], onDelete: Cascade, onUpdate: Cascade)
  obat           Obat?      @relation(fields: [id_obat], references: [id_obat], onDelete: Cascade, onUpdate: Cascade)
}

model Pembayaran {
  id_pembayaran   Int        @id @default(autoincrement())
  id_rekam_medis  Int        
  id_pemilik      Int
  id_hewan        Int
  id_dokter       Int
  id_appointment  Int
  id_obat         Int
  id_resep        Int
  tgl_pembayaran  DateTime
  jumlah_pembayaran Float
  bukti_pembayaran String
  rekam_medis     RekamMedis? @relation(fields: [id_rekam_medis], references: [id_rekam_medis], onDelete: Cascade, onUpdate: Cascade)
  pemilik         Pemilik?   @relation(fields: [id_pemilik], references: [id_pemilik], onDelete: Cascade, onUpdate: Cascade)
  hewan           Hewan?     @relation(fields: [id_hewan], references: [id_hewan], onDelete: Cascade, onUpdate: Cascade)
  dokter          Dokter?    @relation(fields: [id_dokter], references: [id_dokter], onDelete: Cascade, onUpdate: Cascade)
  appointment     Appointment? @relation(fields: [id_appointment], references: [id_appointment], onDelete: Cascade, onUpdate: Cascade)
  obat            Obat?      @relation(fields: [id_obat], references: [id_obat], onDelete: Cascade, onUpdate: Cascade)
  resep           Resep?     @relation(fields: [id_resep], references: [id_resep], onDelete: Cascade, onUpdate: Cascade)
}

model Resep {
  id_resep        Int        @id @default(autoincrement())
  id_rekam_medis  Int        
  id_obat         Int
  jumlah_obat     Int
  pembayaran      Pembayaran[]
  rekam_medis     RekamMedis? @relation(fields: [id_rekam_medis], references: [id_rekam_medis], onDelete: Cascade, onUpdate: Cascade)
  obat            Obat?       @relation(fields: [id_obat], references: [id_obat], onDelete: Cascade, onUpdate: Cascade)
}

model Appointment {
  id_appointment  Int      @id @default(autoincrement())
  id_pemilik      Int
  id_hewan        Int
  id_dokter       Int
  tgl_appointment DateTime
  catatan         String?
  pembayaran      Pembayaran[]
  hewan           Hewan?    @relation(fields: [id_hewan], references: [id_hewan], onDelete: Cascade, onUpdate: Cascade)
  dokter          Dokter?   @relation(fields: [id_dokter], references: [id_dokter], onDelete: Cascade, onUpdate: Cascade)
  pemilik         Pemilik?   @relation(fields: [id_pemilik], references: [id_pemilik], onDelete: Cascade, onUpdate: Cascade)
}

model Dokter {
  id_dokter       Int       @id @default(autoincrement())
  nama_dokter     String
  spesialisasi    String
  appointments    Appointment[]
  pembayaran      Pembayaran[]
}
